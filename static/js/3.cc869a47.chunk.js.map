{"version":3,"sources":["components/Item/Item.jsx","components/BookDetail/BookDetail.jsx","components/componentsFunctions/components-functions.js","components/List/List.jsx"],"names":["Item","book","dispatch","useDispatch","className","onClick","getBookDetail","title","src","cover","alt","width","author","BookDetail","content","str","text","replace","normalUTF8","publisher_date","publisher","pages","categories","map","c","name","category_id","href","url_download","target","exitDetail","List","useState","pageRange","setPageRange","pageNumber","setPageNumber","subTitle","setSubTitle","lang","setLang","prevButton","setPrevButton","nextButton","setNextButton","books","useSelector","state","loading","search","busqueda","query","pag","page","nroPag","numberPage","cat","categ","catId","idCateg","catName","categName","bookDetail","language","handleLanguage","e","value","useEffect","getByCategory","getBooks","length","Spinner","JSON","stringify","item","ID","disabled","alert"],"mappings":"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","file":"static/js/3.cc869a47.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport \"./Item.css\";\r\nimport { getBookDetail } from \"../../actions\";\r\n\r\n\r\nfunction Item({book}) {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  //funcion al hacer click en el libro o Item (llena el State de redux con ese libro)\r\n  function handleBook(){\r\n    dispatch(getBookDetail(book));\r\n  }\r\n\r\n  return (\r\n    <div className=\"item\" onClick={handleBook} >\r\n      <div className=\"title\">{book.title}</div>\r\n      <div className=\"image\">\r\n        {<img src={book.cover} alt=\"\" width=\"100%\" />}\r\n      </div>\r\n      <div className=\"autor\">{book.author}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./BookDetail.css\";\r\nimport { exitDetail } from \"../../actions\";\r\nimport normalUTF8 from \"../componentsFunctions/components-functions.js\";\r\n\r\nfunction BookDetail({ book }) {\r\n  const dispatch = useDispatch();\r\n  const content = normalUTF8(book.content);\r\n\r\n  function volver() {\r\n    dispatch(exitDetail());\r\n  }\r\n\r\n  return (\r\n      <div className=\"all\">\r\n        <img className=\"imageDetail\" src={book.cover} alt=\"\" />\r\n\r\n        <div className=\"rightSide\">\r\n          <div className=\"data\">\r\n            <div className=\"titleBook\">\r\n              <h2>{book.title}</h2>\r\n            </div>\r\n            <div className=\"autor\">\r\n              <h3>Autor/a: {book.author}</h3>\r\n            </div>\r\n            <div className=\"detalles\">\r\n              <h3>Detalles</h3>\r\n            </div>\r\n            <div>\r\n              <span className=\"infoTitle\"> Año:</span>{\" \"}\r\n              <span>{book.publisher_date}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"infoTitle\">Editor:</span>{\" \"}\r\n              <span>{book.publisher}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"infoTitle\">Páginas:</span>{\" \"}\r\n              <span>{book.pages} págs.</span>\r\n            </div>\r\n            <div className=\"detalles\">\r\n              <h3>Contenido</h3>\r\n            </div>\r\n            <div className=\"contentBook\">{content}</div>\r\n            <div className=\"detalles\">\r\n              <h3>Categorías</h3>\r\n            </div>\r\n            <div className=\"categContainer\">\r\n              {book.categories.map((c) => (\r\n                <div key={c.category_id} className=\"categ\">\r\n                  {c.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"link\">\r\n              <a className=\"link\" href={book.url_download} target=\"\">\r\n                Enlace a Open Libra para abrir/descargar PDF\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <button className=\"volver\" onClick={volver}>\r\n            VOLVER\r\n          </button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default BookDetail;\r\n","\r\n\r\nexport default function normalUTF8(str){\r\n    var text = str.replace(/&aacute;/g, \"á\");\r\n    text = text.replace(/&eacute;/g, \"é\");\r\n    text = text.replace(/&iacute;/g, \"í\");\r\n    text = text.replace(/&oacute;/g, \"ó\");\r\n    text = text.replace(/&uacute;/g, \"ú\");\r\n    text = text.replace(/&Aacute;/g, \"A\");\r\n    text = text.replace(/&Eacute;/g, \"E\");\r\n    text = text.replace(/&Iacute;/g, \"I\");\r\n    text = text.replace(/&Oacute;/g, \"O\");\r\n    text = text.replace(/&Uacute;/g, \"U\");\r\n    text = text.replace(/&ntilde;/g, \"ñ\");\r\n    text = text.replace(/&lt;/g, \"<\");\r\n    text = text.replace(/&gt;/g, \">\");\r\n    text = text.replace(/li>/g, \"-\");\r\n    text = text.replace(/ul>/g, \"-\");\r\n    text = text.replace(/[<>/]/g, \" \");\r\n    text = text.replace(/&quot;/g, '\"');\r\n    text = text.replace(/&amp;/g, '&');\r\n    text = text.replace(/&rsquo;/g, \"'\");\r\n    text = text.replace(/&#039;/g, \"'\");\r\n    text = text.replace(/&laquo;/g, '\"');\r\n    text = text.replace(/&raquo;/g, '\"');\r\n    text = text.replace(/&ndash;/g, '-');\r\n    text = text.replace(/&mdash;/g, '-');\r\n    text = text.replace(/&iquest;/g, '¿');\r\n    text = text.replace(/&iexcl;/g, '¡');\r\n    text = text.replace(/&ldquo;/g, '\"');\r\n    text = text.replace(/&rdquo;/g, '\"');\r\n    return text;\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBooks, getByCategory, query} from \"../../actions\";\r\nimport Item from \"../Item/Item\";\r\nimport Spinner from \"../Spinner/Spinner.js\";\r\nimport BookDetail from \"../BookDetail/BookDetail\";\r\nimport \"./List.css\";\r\n\r\nfunction List() {\r\n  const [pageRange, setPageRange] = useState(0);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [subTitle, setSubTitle] = useState(\"\");\r\n  const [lang, setLang] = useState(\"all\");\r\n  const [prevButton, setPrevButton] = useState(false);\r\n  const [nextButton, setNextButton] = useState(false);\r\n\r\n  //constantes obtenidas del State de redux\r\n  const dispatch = useDispatch();\r\n  const books = useSelector((state) => state.books);    //libros del State de redux\r\n  const loading = useSelector((state) => state.loading);// true o false (si se esta cargando el State)\r\n  const search = useSelector((state) => state.search);  // true o false (si esta activa la busqueda)\r\n  const busqueda = useSelector((state) => state.query); //string, la busqueda ingresada\r\n  const pag = useSelector((state) => state.page);       //rango de libros en el State redux\r\n  const nroPag = useSelector((state) => state.numberPage);//nro pag en el State de redux\r\n  const cat = useSelector((state) => state.categ);      // true o false (si se seleccionó una categoría)\r\n  const catId = useSelector((state) => state.idCateg);  //id de la categ seleccionada\r\n  const catName = useSelector((state) => state.categName);//Nombre de la categoría seleccionada\r\n  const book = useSelector((state) => state.bookDetail);  //libro cliqueado para mostrar componente BookDetail\r\n  const language = useSelector((state) => state.language);// lenguaje seleccionado\r\n\r\n // se dispara al cambiar pag sgte o anterior, o al cambiar de lenguaje\r\n  useEffect(() => {\r\n    dispatch(query(true));\r\n    if (!cat) {\r\n      dispatch(getBooks(pageRange, pageNumber, lang));\r\n    } else {\r\n      dispatch(getByCategory(catId, catName, pageRange, pageNumber, lang));\r\n    }\r\n  }, [pageRange, lang]);\r\n\r\n\r\n  //se dispara al cambiar el State de libros, es para mostrar el mje de que se esta mostrando (todos, busqueda o categoria)\r\n  useEffect(() => {\r\n    setPageNumber(nroPag);\r\n    if (cat) setSubTitle(\"Categoría: \" + catName);\r\n    else if (search) setSubTitle(\"Busqueda: \" + busqueda);\r\n    else setSubTitle(\"Todos los Libros \");\r\n    if (nroPag === 1) setPrevButton(true);\r\n    else setPrevButton(false);\r\n    if (books.length === 10) setNextButton(false);\r\n    else setNextButton(true);\r\n  }, [books]);\r\n\r\n  //funcion al presionar pag sgte\r\n  const nextPage = () => {\r\n    setPageRange(pag + 10);\r\n    setPageNumber(nroPag + 1);\r\n  };\r\n\r\n  //funcion al presionar pag anterior\r\n  const prevPage = () => {\r\n    if (pageRange >= 10) {\r\n      setPageNumber(nroPag - 1);\r\n      setPageRange(pag - 10);\r\n    } else alert(\"no hay libros anteriores\");\r\n  }\r\n \r\n  //funcion al presionar botones de lenguaje de libros\r\n  function handleLanguage(e){\r\n    setLang(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"divContainer\">\r\n      {/*  renderiza: spiner, encabezado, items y botones paginación */ }\r\n      {loading && <Spinner />}\r\n      {JSON.stringify(book) !== \"{}\" ? ( \r\n        /* renderiza el libro seleccionado */\r\n        <BookDetail book={book} />\r\n       ):(\r\n         /*  renderiza: encabezado, grid de libros y botones paginación */\r\n        <div className=\"structure\"> \r\n          {/* encabezado: leyenda de selección y botones lenguaje  */}\r\n          <div className=\"head\"> \r\n            <span>{subTitle}</span>\r\n            <div className=\"languagecontainer\">\r\n              <button className={language===\"english\"? \"languageButton activeLang\" : \"languageButton\"} \r\n                value=\"english\" onClick={handleLanguage}>Ingles</button>\r\n              <button className={language===\"spanish\"? \"languageButton activeLang\" : \"languageButton\"} \r\n                value=\"spanish\" onClick={(e)=>handleLanguage(e)}>Español</button>\r\n              <button className={language===\"all\"? \"languageButton activeLang\" : \"languageButton\"} \r\n                value=\"all\" onClick={(e)=>handleLanguage(e)}>Todos</button>\r\n            </div>\r\n          </div>\r\n          {/* renderiza un grid con los libros(10) */}\r\n          <div className=\"grid\">\r\n            {books.map((item) => (\r\n              <Item\r\n                book={item}\r\n                key={item.ID}\r\n              />\r\n            ))}\r\n          </div>\r\n          {/* renderiza botones de paginación */}\r\n          {!loading && !search && (\r\n            <div className=\"buttonCont\">\r\n              <button\r\n                name=\"prev\"\r\n                className=\"btnPrev\"\r\n                disabled={prevButton}\r\n                onClick={prevPage}\r\n                >\r\n                Anterior\r\n              </button>\r\n              <p className=\"nroPag\">Pag {pageNumber}</p>\r\n              <button\r\n                name=\"next\"\r\n                className=\"btnNext\"\r\n                disabled={nextButton}\r\n                onClick={nextPage}\r\n                >\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          )}\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"sourceRoot":""}